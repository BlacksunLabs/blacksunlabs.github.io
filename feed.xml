<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://blacksunhackers.club/</id><title>Blacksun Hackers Club</title><subtitle>Just a bunch of hackers doing what we find fun.</subtitle> <updated>2022-01-06T02:07:15+08:00</updated> <author> <name>Blacksun Labs</name> <uri>https://blacksunhackers.club/</uri> </author><link rel="self" type="application/atom+xml" href="https://blacksunhackers.club/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://blacksunhackers.club/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 Blacksun Labs </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Bypassing TCC With iTerm2</title><link href="https://blacksunhackers.club/posts/Bypassing-TCC-With-iTerm2/" rel="alternate" type="text/html" title="Bypassing TCC With iTerm2" /><published>2021-12-08T00:00:00+08:00</published> <updated>2021-12-09T13:40:57+08:00</updated> <id>https://blacksunhackers.club/posts/Bypassing-TCC-With-iTerm2/</id> <content src="https://blacksunhackers.club/posts/Bypassing-TCC-With-iTerm2/" /> <author> <name>actae0n</name> </author> <summary> Motivation When landing a shell in MacOS environments, you’ll frequently want access to the files under your victim’s home folder. Some of these locations are TCC protected. Specifically ~/Documents/, ~/Downloads/, ~/Desktop/ all require their own approvals which correspond to the kTCCServiceSystemPolicyDocumentsFolder, kTCCServiceSystemPolicyDownloadsFolder, kTCCServiceSystemPolicyDesktopFold... </summary> </entry> <entry><title>Looting Electron Apps Via The V8 Inspector</title><link href="https://blacksunhackers.club/posts/Looting-Electron-Apps-Via-V8-Inspector/" rel="alternate" type="text/html" title="Looting Electron Apps Via The V8 Inspector" /><published>2021-08-29T00:00:00+08:00</published> <updated>2021-09-12T03:17:07+08:00</updated> <id>https://blacksunhackers.club/posts/Looting-Electron-Apps-Via-V8-Inspector/</id> <content src="https://blacksunhackers.club/posts/Looting-Electron-Apps-Via-V8-Inspector/" /> <author> <name>actae0n</name> </author> <summary> What Is The V8 Inspector? V8 is the JavaScript engine that ships as part of both Chromium (and derivatives) as well as Node (which is in turn included in Electron). V8 provides a debugging interface that implements a subset of the Chrome DevTools Protocol (hereafter referred to as CDP). In Chromium, Chrome, and other Blink based browsers, methods from all Domains of CDP are exposed through the ... </summary> </entry> <entry><title>Hijacking Web Traffic On MacOS and iOS With MDM Profiles</title><link href="https://blacksunhackers.club/posts/Hijacking-Web-Traffic-MDM-Profiles/" rel="alternate" type="text/html" title="Hijacking Web Traffic On MacOS and iOS With MDM Profiles" /><published>2019-12-18T00:00:00+08:00</published> <updated>2021-09-12T03:17:07+08:00</updated> <id>https://blacksunhackers.club/posts/Hijacking-Web-Traffic-MDM-Profiles/</id> <content src="https://blacksunhackers.club/posts/Hijacking-Web-Traffic-MDM-Profiles/" /> <author> <name>actae0n</name> </author> <summary> What Are MDM Profiles? MDM profiles allow organizations to deploy common device configurations across MacOS and iOS devices. They can be deployed by hand, or via 3rd party MDM solutions such as Jamf or Munki. They’re deployed as .mobileconfig files, which are just XML under the hood. Here’s an example config that enforces a wallpaper setting: &amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt; &amp;lt;!D... </summary> </entry> <entry><title>HomeBrood 0x00 - Surreptitious hijacking of Homebrew on macOS</title><link href="https://blacksunhackers.club/posts/Surreptitious-hijacking-brew-macOS/" rel="alternate" type="text/html" title="HomeBrood 0x00 - Surreptitious hijacking of Homebrew on macOS" /><published>2019-04-05T00:00:00+08:00</published> <updated>2021-09-12T03:17:07+08:00</updated> <id>https://blacksunhackers.club/posts/Surreptitious-hijacking-brew-macOS/</id> <content src="https://blacksunhackers.club/posts/Surreptitious-hijacking-brew-macOS/" /> <author> <name>noncetonic</name> </author> <summary> Foreward I thought it might be fun to poke at Homebrew and see what kind of things I could find. Welcome to the beginning of what I hope will be a small but fun series of posts on abusing HomeBrew. HomeBrood 0x00 Homebrew Analytics By default, homebrew is set to phone home to Google Analytics over HTTPS and provide a number of known, documented, metadata strings claimed by the Homebrew team... </summary> </entry> <entry><title>Acquiring and Abusing Slack Legacy Tokens on macOS</title><link href="https://blacksunhackers.club/posts/acquiring-and-abusing-legacy-slack-tokens/" rel="alternate" type="text/html" title="Acquiring and Abusing Slack Legacy Tokens on macOS" /><published>2019-03-18T00:00:00+08:00</published> <updated>2021-09-13T01:51:01+08:00</updated> <id>https://blacksunhackers.club/posts/acquiring-and-abusing-legacy-slack-tokens/</id> <content src="https://blacksunhackers.club/posts/acquiring-and-abusing-legacy-slack-tokens/" /> <author> <name>noncetonic</name> </author> <summary> Foreward Right on the tails of my last post that detailed a token theft attack on macOS, today I’m sharing yet another procedure for acquiring and abusing tokens found on a macOS system. Included with this post are two github projects, one which helps extract the tokens from Slack, and another which leverage the tokens for incognito logging and monitoring of a Slack team. Legacy Tokens So w... </summary> </entry> </feed>
